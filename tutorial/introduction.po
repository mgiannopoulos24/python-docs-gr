# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-14 12:51+0000\n"
"PO-Revision-Date: 2025-02-13 17:17+0001\n"
"Last-Translator: Lysandros Nikolaou <lysandros@pygreece.org>\n"
"Language-Team: PyGreece <organizers@pygreece.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: tutorial/introduction.rst:5
msgid "An Informal Introduction to Python"
msgstr "Μία Άτυπη Εισαγωγή στην Python"

#: tutorial/introduction.rst:7
msgid ""
"In the following examples, input and output are distinguished by the "
"presence or absence of prompts (:term:`>>>` and :term:`...`): to repeat the "
"example, you must type everything after the prompt, when the prompt appears; "
"lines that do not begin with a prompt are output from the interpreter. Note "
"that a secondary prompt on a line by itself in an example means you must "
"type a blank line; this is used to end a multi-line command."
msgstr ""
"Στα ακόλουθα παραδείγματα, η είσοδος και η έξοδος διακρίνονται από την "
"παρουσία ή την απουσία prompts (:term:`>>>` και :term:`...`): για να "
"επαναλάβετε το παράδειγμα, πρέπει να πληκτρολογήσετε τα πάντα μετά το "
"prompt, όταν αυτό υπάρχει∙ οι γραμμές που δεν αρχίζουν με prompt είναι "
"έξοδος από τον διερμηνέα. Σημείωση ότι ένα δευτερεύον prompt μόνο του σε μια "
"γραμμή σε ένα παράδειγμα σημαίνει ότι πρέπει να πληκτρολογήσετε μια κενή "
"γραμμή∙ αυτό χρησιμοποιείται για να τερματίσετε μια εντολή πολλών γραμμών."

#: tutorial/introduction.rst:16
msgid ""
"You can toggle the display of prompts and output by clicking on ``>>>`` in "
"the upper-right corner of an example box.  If you hide the prompts and "
"output for an example, then you can easily copy and paste the input lines "
"into your interpreter."
msgstr ""
"Μπορείτε να αλλάξετε την εμφάνιση των prompts και της εξόδου κάνοντας κλικ "
"στο ``>>>>`` στην επάνω δεξιά γωνία ενός πλαισίου παραδείγματος.  Εάν "
"αποκρύψετε τα prompts και την έξοδο για ένα παράδειγμα, τότε μπορείτε εύκολα "
"να αντιγράψετε και να επικολλήσετε τις γραμμές εισαγωγής στον διερμηνέα σας."

#: tutorial/introduction.rst:23
msgid ""
"Many of the examples in this manual, even those entered at the interactive "
"prompt, include comments.  Comments in Python start with the hash character, "
"``#``, and extend to the end of the physical line.  A comment may appear at "
"the start of a line or following whitespace or code, but not within a string "
"literal.  A hash character within a string literal is just a hash character. "
"Since comments are to clarify code and are not interpreted by Python, they "
"may be omitted when typing in examples."
msgstr ""
"Πολλά από τα παραδείγματα σε αυτόν τον οδηγό, ακόμη και αυτά που εισάγονται "
"στο διαδραστικό prompt, περιέχουν σχόλια.  Τα σχόλια στην Python ξεκινούν με "
"τον χαρακτήρα hashtag, ``#``, και εκτείνονται μέχρι το τέλος της γραμμής.  "
"Ένα σχόλιο μπορεί να εμφανιστεί στην αρχή μιας σειράς ή μετά από κενά "
"διαστήματα ή κώδικα, αλλά όχι μέσα σε μία συμβολοσειρά.  Ένας χαρακτήρας "
"hashtag μέσα σε μία συμβολοσειρά είναι απλώς ένας χαρακτήρας hashtag. "
"Δεδομένου ότι τα σχόλια αποσκοπούν στην αποσαφήνιση του κώδικα και δεν "
"ερμηνεύονται από την Python, μπορούν να παραλείπονται κατά την πληκτρολόγηση "
"παραδειγμάτων."

#: tutorial/introduction.rst:31
msgid "Some examples::"
msgstr "Μερικά παραδείγματα::"

#: tutorial/introduction.rst:42
msgid "Using Python as a Calculator"
msgstr "Χρησιμοποιώντας την Python ως Αριθμομηχανή"

#: tutorial/introduction.rst:44
msgid ""
"Let's try some simple Python commands.  Start the interpreter and wait for "
"the primary prompt, ``>>>``.  (It shouldn't take long.)"
msgstr ""
"Ας δοκιμάσουμε μερικές απλές εντολές της Python. Ξεκινήστε τον διερμηνέα και "
"περιμένετε το πρώτο prompt, ```>>>```.  (Δεν θα πάρει πολύ χρόνο.)"

#: tutorial/introduction.rst:51
msgid "Numbers"
msgstr "Αριθμοί"

#: tutorial/introduction.rst:53
msgid ""
"The interpreter acts as a simple calculator: you can type an expression at "
"it and it will write the value.  Expression syntax is straightforward: the "
"operators ``+``, ``-``, ``*`` and ``/`` can be used to perform arithmetic; "
"parentheses (``()``) can be used for grouping. For example::"
msgstr ""
"Ο διερμηνέας λειτουργεί ως μία απλή αριθμομηχανή: μπορείτε να "
"πληκτρολογήσετε μία έκφραση και εκείνος θα γράψει την τιμή.  Το συντακτικό "
"μίας έκφρασης είναι απλό: οι τελεστές ``+``, ``-``, ``*`` και ``/`` μπορούν "
"να χρησιμοποιηθούν για την εκτέλεση αριθμητικών πράξεων∙ οι παρενθέσεις "
"(``()``) μπορούν να χρησιμοποιηθούν για ομαδοποίηση. Για παράδειγμα::"

#: tutorial/introduction.rst:68
msgid ""
"The integer numbers (e.g. ``2``, ``4``, ``20``) have type :class:`int`, the "
"ones with a fractional part (e.g. ``5.0``, ``1.6``) have type :class:"
"`float`.  We will see more about numeric types later in the tutorial."
msgstr ""
"Οι ακέραιοι αριθμοί (π.χ. ``2``, ``4``, ``20``) έχουν τον τύπο :class:`int`, "
"οι αριθμοί με δεκαδικά ψηφία (π.χ. ``5.0``, ``1.6``) έχουν τον τύπο :class:"
"`float`.  Θα δούμε περισσότερα για τους αριθμητικούς τύπους αργότερα σε "
"αυτόν τον οδηγό."

#: tutorial/introduction.rst:72
msgid ""
"Division (``/``) always returns a float.  To do :term:`floor division` and "
"get an integer result you can use the ``//`` operator; to calculate the "
"remainder you can use ``%``::"
msgstr ""
"Η διαίρεση (``/``) πάντα επιστρέφει ένα float.  Για να κάνετε :term:`floor "
"division` (ακέραια διαίρεση) και να πάρετε ένα ακέραιο αποτέλεσμα, μπορείτε "
"να χρησιμοποιήσετε τον τελεστή ``//``∙ για να υπολογίσετε το το υπόλοιπο "
"μίας διαίρεσης, χρησιμοποιήστε τον τελεστή ``%``::"

#: tutorial/introduction.rst:86
msgid ""
"With Python, it is possible to use the ``**`` operator to calculate powers "
"[#]_::"
msgstr ""
"Στην Python, είναι εφικτό να χρησιμοποιήσετε τον τελεστή ``**`` για να "
"υπολογίσετε δυνάμεις [#]_::"

#: tutorial/introduction.rst:93
msgid ""
"The equal sign (``=``) is used to assign a value to a variable. Afterwards, "
"no result is displayed before the next interactive prompt::"
msgstr ""
"Το σύμβολο της ισότητας (``=``) χρησιμοποιείται για την ανάθεση μιας τιμής "
"σε μια μεταβλητή. Στη συνέχεια, δεν εμφανίζεται αποτέλεσμα πριν από το "
"επόμενο διαδραστικό prompt::"

#: tutorial/introduction.rst:101
msgid ""
"If a variable is not \"defined\" (assigned a value), trying to use it will "
"give you an error::"
msgstr ""
"Αν μία μεταβλητή δεν έχει «οριστεί» (δεν της έχει αποδοθεί κάποια τιμή), η "
"προσπάθεια χρήσης της θα σας δώσει ένα σφάλμα::"

#: tutorial/introduction.rst:109
msgid ""
"There is full support for floating point; operators with mixed type operands "
"convert the integer operand to floating point::"
msgstr ""
"Υπάρχει πλήρης υποστήριξη για δεκαδικά ψηφία∙ τελεστές με τελεστέους μικτού "
"τύπου μετατρέπουν τον ακέραιο τελεστέο σε δεκαδικό::"

#: tutorial/introduction.rst:115
msgid ""
"In interactive mode, the last printed expression is assigned to the variable "
"``_``.  This means that when you are using Python as a desk calculator, it "
"is somewhat easier to continue calculations, for example::"
msgstr ""
"Στη διαδραστική λειτουργία, η τελευταία εκτυπωμένη έκφραση εκχωρείται στη "
"μεταβλητή ``_``.  Αυτό σημαίνει ότι όταν χρησιμοποιείτε την Python ως "
"αριθμομηχανή γραφείου, είναι κάπως πιο εύκολο να συνεχίσετε προηγούμενους "
"υπολογισμούς, για παράδειγμα:"

#: tutorial/introduction.rst:128
msgid ""
"This variable should be treated as read-only by the user.  Don't explicitly "
"assign a value to it --- you would create an independent local variable with "
"the same name masking the built-in variable with its magic behavior."
msgstr ""
"Αυτή η μεταβλητή θα πρέπει να αντιμετωπίζεται από τον χρήστη ως μόνο για "
"ανάγνωση.  Μην της αναθέτετε ρητά μια τιμή --- θα δημιουργούσατε μια "
"ανεξάρτητη τοπική μεταβλητή με το ίδιο όνομα αποκρύπτοντας την ενσωματωμένη "
"μεταβλητή με τη μαγική της συμπεριφορά."

#: tutorial/introduction.rst:132
msgid ""
"In addition to :class:`int` and :class:`float`, Python supports other types "
"of numbers, such as :class:`~decimal.Decimal` and :class:`~fractions."
"Fraction`. Python also has built-in support for :ref:`complex numbers "
"<typesnumeric>`, and uses the ``j`` or ``J`` suffix to indicate the "
"imaginary part (e.g. ``3+5j``)."
msgstr ""
"Εκτός από :class:`int` και :class:`float`, η Python υποστηρίζει και άλλους "
"τύπους αριθμών, όπως :class:`~decimal.Decimal` και :class:`~fractions."
"Fraction`. Η Python έχει επίσης ενσωματωμένη υποστήριξη για :ref:`complex "
"numbers <typesnumeric>` (μιγαδικούς αριθμούς), και χρησιμοποιεί την κατάληξη "
"``j`` ή ``J`` για να δηλώσει το φανταστικό μέρος (π.χ. ``3+5j``)."

#: tutorial/introduction.rst:142
msgid "Text"
msgstr "Κείμενο"

#: tutorial/introduction.rst:144
msgid ""
"Python can manipulate text (represented by type :class:`str`, so-called "
"\"strings\") as well as numbers.  This includes characters \"``!``\", words "
"\"``rabbit``\", names \"``Paris``\", sentences \"``Got your back.``\", etc. "
"\"``Yay! :)``\". They can be enclosed in single quotes (``'...'``) or double "
"quotes (``\"...\"``) with the same result [#]_."
msgstr ""
"Η Python μπορεί να χειριστεί κείμενο (που αντιπροσωπεύεται από τον τύπο :"
"class:`str`, τις λεγόμενες «συμβολοσειρές») καθώς και αριθμούς.  Αυτό "
"περιλαμβάνει χαρακτήρες «``!``», λέξεις «``κουνέλι``», ονόματα «``Παρίσι``», "
"προτάσεις «``Καλύπτω τα νώτα σου.``», κ.λπ. «``Ναι! :)``». Μπορούν να "
"περικλείονται σε μονά εισαγωγικά (``'...'``) ή διπλά εισαγωγικά (``\"..."
"\"``) με το ίδιο αποτέλεσμα [#]_."

#: tutorial/introduction.rst:157
msgid ""
"To quote a quote, we need to \"escape\" it, by preceding it with ``\\``. "
"Alternatively, we can use the other type of quotation marks::"
msgstr ""
"Για να προσθέσουμε ένα εισαγωγικό, πρέπει να το «κάνουμε escape», "
"προτάσσοντάς του μία ``\\``. Εναλλακτικά, μπορούμε να χρησιμοποιήσουμε τον "
"άλλο τύπο εισαγωγικών::"

#: tutorial/introduction.rst:171
msgid ""
"In the Python shell, the string definition and output string can look "
"different.  The :func:`print` function produces a more readable output, by "
"omitting the enclosing quotes and by printing escaped and special "
"characters::"
msgstr ""
"Στο shell της Python, ο ορισμός συμβολοσειράς και η συμβολοσειρά εξόδου "
"μπορεί να μοιάζουν διαφορετικά.  Η συνάρτηση :func:`print` παράγει μια πιο "
"ευανάγνωστη έξοδο, παραλείποντας τα εισαγωγικά που περικλείουν την "
"συμβολοσειρά και εκτυπώνοντας escaped και ειδικούς χαρακτήρες::"

#: tutorial/introduction.rst:182
msgid ""
"If you don't want characters prefaced by ``\\`` to be interpreted as special "
"characters, you can use *raw strings* by adding an ``r`` before the first "
"quote::"
msgstr ""
"Εάν δεν θέλετε οι χαρακτήρες που προηγούνται από μία ``\\`` να ερμηνεύονται "
"ως ειδικοί χαρακτήρες, μπορείτε να χρησιμοποιήσετε *ακατέργαστες "
"συμβολοσειρές* προσθέτοντας ένα ``r`` πριν από το πρώτο εισαγωγικό::"

#: tutorial/introduction.rst:192
msgid ""
"There is one subtle aspect to raw strings: a raw string may not end in an "
"odd number of ``\\`` characters; see :ref:`the FAQ entry <faq-programming-"
"raw-string-backslash>` for more information and workarounds."
msgstr ""
"Υπάρχει μια δυσδιάκριτη πτυχή στις ακατέργαστες συμβολοσειρές: μια "
"ακατέργαστη συμβολοσειρά δεν μπορεί να τελειώνει σε περιττό αριθμό "
"χαρακτήρων ``\\``' δείτε :ref:`το λήμμα των Συχνών Ερωτήσεων <faq-"
"programming-raw-string-backslash>` για περισσότερες πληροφορίες και λύσεις."

#: tutorial/introduction.rst:197
msgid ""
"String literals can span multiple lines.  One way is using triple-quotes: "
"``\"\"\"...\"\"\"`` or ``'''...'''``.  End of lines are automatically "
"included in the string, but it's possible to prevent this by adding a ``\\`` "
"at the end of the line.  The following example::"
msgstr ""
"Οι συμβολοσειρές μπορούν να καλύπτουν πολλές γραμμές.  Ένας τρόπος είναι "
"χρησιμοποιώντας τριπλά εισαγωγικά: ``\"\"\"...\"\"\"`` ή ``'''...'''``.  Οι "
"χαρακτήρες στο τέλος των γραμμών συμπεριλαμβάνονται αυτόματα στην "
"συμβολοσειρά, αλλά είναι εφικτό να το αποτρέψετε αυτό προσθέτοντας μία "
"``\\`` στο τέλος της γραμμής.  Το ακόλουθο παράδειγμα::"

#: tutorial/introduction.rst:208
msgid ""
"produces the following output (note that the initial newline is not "
"included):"
msgstr ""
"παράγει την ακόλουθη έξοδο (σημειώστε ότι η αρχική νέα γραμμή δεν "
"συμπεριλαμβάνεται στην συμβολοσειρά):"

#: tutorial/introduction.rst:216
msgid ""
"Strings can be concatenated (glued together) with the ``+`` operator, and "
"repeated with ``*``::"
msgstr ""
"Οι συμβολοσειρές μπορούν να συνδεθούν (κολληθούν η μία στην άλλη) με τον "
"τελεστή ``+``, και να επαναληφθούν με τον τελεστή ``*``::"

#: tutorial/introduction.rst:223
msgid ""
"Two or more *string literals* (i.e. the ones enclosed between quotes) next "
"to each other are automatically concatenated. ::"
msgstr ""
"Δύο ή παραπάνω *συμβολοσειρές* (που περικλείονται σε εισαγωγικά) η μία δίπλα "
"στην άλλη συνδέονται αυτόματα. ::"

#: tutorial/introduction.rst:229
msgid ""
"This feature is particularly useful when you want to break long strings::"
msgstr ""
"Αυτή η λειτουργία είναι ιδιαίτερα χρήσιμη όταν θέλετε να σπάσετε μεγάλες "
"συμβολοσειρές::"

#: tutorial/introduction.rst:236
msgid ""
"This only works with two literals though, not with variables or expressions::"
msgstr ""
"Ωστόσο, αυτό λειτουργεί μόνο με κυριολεκτικές συμβολοσειρές, όχι με "
"μεταβλητές ή εκφράσεις::"

#: tutorial/introduction.rst:250
msgid ""
"If you want to concatenate variables or a variable and a literal, use ``+``::"
msgstr ""
"Αν θέλετε να συνδέσετε μεταβλητές ή μία μεταβλητή και μία κυριολεκτική "
"συμβολοσειρά, χρησιμοποιήστε το ``+``::"

#: tutorial/introduction.rst:255
msgid ""
"Strings can be *indexed* (subscripted), with the first character having "
"index 0. There is no separate character type; a character is simply a string "
"of size one::"
msgstr ""
"Οι συμβολοσειρές μπορούν να είναι *προσπελάσιμες* (μέσω ευρετηρίου), με τον "
"πρώτο χαρακτήρα να έχει τον δείκτη 0. Δεν υπάρχει ξεχωριστός τύπος για "
"χαρακτήρες∙ ένας χαρακτήρας είναι απλώς μία συμβολοσειρά με μέγεθος ένα::"

#: tutorial/introduction.rst:265
msgid ""
"Indices may also be negative numbers, to start counting from the right::"
msgstr ""
"Οι δείκτες μπορούν να είναι και αρνητικοί αριθμοί, για να ξεκινήσετε την "
"αρίθμηση από τα δεξιά::"

#: tutorial/introduction.rst:274
msgid "Note that since -0 is the same as 0, negative indices start from -1."
msgstr ""
"Σημειώστε ότι αφού το -0 είναι το ίδιο με το 0, οι αρνητικοί δείκτες "
"ξεκινούν από το -1."

#: tutorial/introduction.rst:276
msgid ""
"In addition to indexing, *slicing* is also supported.  While indexing is "
"used to obtain individual characters, *slicing* allows you to obtain a "
"substring::"
msgstr ""
"Εκτός από την ευρετηρίαση, υποστηρίζεται επίσης ο *τεμαχισμός*.  Ενώ η "
"ευρετηρίαση χρησιμοποιείται για την απόκτηση μεμονομένων χαρακτήρων, ο "
"*τεμαχισμός* σας επιτρέπει να αποκτήσετε ένας μέρος της συμβολοσειράς::"

#: tutorial/introduction.rst:284
msgid ""
"Slice indices have useful defaults; an omitted first index defaults to zero, "
"an omitted second index defaults to the size of the string being sliced. ::"
msgstr ""
"Οι δείκτες ενός τεμαχισμού έχουν χρήσιμες προεπιλογές∙ η παράλειψη του "
"πρώτου δείκτη έχει ως προεπιλογή το μηδέν, η παράλειψη του δεύτερου δείκτη "
"έχει ως προεπιλογή το μέγεθος της συμβολοσειράς που τεμαχίζεται. ::"

#: tutorial/introduction.rst:294
msgid ""
"Note how the start is always included, and the end always excluded.  This "
"makes sure that ``s[:i] + s[i:]`` is always equal to ``s``::"
msgstr ""
"Προσέξτε πώς η αρχή περιλαμβάνεται πάντα, ενώ το τέλος πάντα εξαιρείται.  "
"Αυτό εξασφαλίζει ότι το ``s[:i] + s[i:]`` είναι πάντα ίσο με ``s``::"

#: tutorial/introduction.rst:302
msgid ""
"One way to remember how slices work is to think of the indices as pointing "
"*between* characters, with the left edge of the first character numbered 0. "
"Then the right edge of the last character of a string of *n* characters has "
"index *n*, for example::"
msgstr ""
"Ένας τρόπος να θυμάστε πώς λειτουργούν οι τεμαχισμοί είναι να σκεφτείτε ότι "
"οι δείκτες δείχνουν *μεταξύ* χαρακτήρων, με το αριστερό άκρο του πρώτου "
"χαρακτήρα να αριθμείται με 0. Τότε το δεξιό άκρο του τελευταίου χαρακτήρα "
"μιας συμβολοσειράς *ν* χαρακτήρων έχει δείκτη *ν*, για παράδειγμα::"

#: tutorial/introduction.rst:313
msgid ""
"The first row of numbers gives the position of the indices 0...6 in the "
"string; the second row gives the corresponding negative indices. The slice "
"from *i* to *j* consists of all characters between the edges labeled *i* and "
"*j*, respectively."
msgstr ""
"Η πρώτη σειρά αριθμών δίνει τη θέση των δεικτών 0...6 στην συμβολοσειρά∙ η "
"δεύτερη σειρά δίνει τους αντίστοιχους αρνητικούς δείκτες. Ο τεμαχισμός από "
"*i* έως *j* αποτελείται από όλους τους χαρακτήρες μεταξύ των άκρων με "
"ετικέτες *i* και *j*, αντίστοιχα."

#: tutorial/introduction.rst:318
msgid ""
"For non-negative indices, the length of a slice is the difference of the "
"indices, if both are within bounds.  For example, the length of "
"``word[1:3]`` is 2."
msgstr ""
"Για μη αρνητικούς δείκτες, το μήκος ενός τεμαχισμού είναι η διαφορά των "
"δεικτών, εάν και οι δύο είναι εντός των ορίων.  Για παράδειγμα, το μήκος του "
"``word[1:3]`` είναι 2."

#: tutorial/introduction.rst:322
msgid "Attempting to use an index that is too large will result in an error::"
msgstr "Η απόπειρα χρήσης ενός πολύ μεγάλου δείκτη θα οδηγήσει σε σφάλμα::"

#: tutorial/introduction.rst:329
msgid ""
"However, out of range slice indexes are handled gracefully when used for "
"slicing::"
msgstr ""
"Ωστόσο, οι δείκτες εκτός εύρους αντιμετωπίζονται χωρίς σφάλμα όταν "
"χρησιμοποιούνται για τεμαχισμούς::"

#: tutorial/introduction.rst:337
msgid ""
"Python strings cannot be changed --- they are :term:`immutable`. Therefore, "
"assigning to an indexed position in the string results in an error::"
msgstr ""
"Οι συμβολοσειρές της Python δεν μπορούν να αλλάξουν --- είναι :term:"
"`immutable`. Επομένως, η ανάθεση σε μια συγκεκριμένη θέση στη συμβολοσειρά "
"οδηγεί σε σφάλμα::"

#: tutorial/introduction.rst:349
msgid "If you need a different string, you should create a new one::"
msgstr ""
"Εάν χρειάζεστε μια διαφορετική συμβολοσειρά, θα πρέπει να δημιουργήσετε μια "
"νέα::"

#: tutorial/introduction.rst:356
msgid "The built-in function :func:`len` returns the length of a string::"
msgstr ""
"Η ενσωματωμένη συνάρτηση :func:`len` επιστρέφει το μήκος μιας συμβολοσειράς::"

#: tutorial/introduction.rst:367
msgid ":ref:`textseq`"
msgstr ":ref:`textseq`"

#: tutorial/introduction.rst:366
msgid ""
"Strings are examples of *sequence types*, and support the common operations "
"supported by such types."
msgstr ""
"Οι συμβολοσειρές είναι παραδείγματα *τύπων ακολουθίας* και υποστηρίζουν τις "
"κοινές πράξεις που υποστηρίζονται από τέτοιους τύπους."

#: tutorial/introduction.rst:371
msgid ":ref:`string-methods`"
msgstr ":ref:`string-methods`"

#: tutorial/introduction.rst:370
msgid ""
"Strings support a large number of methods for basic transformations and "
"searching."
msgstr ""
"Οι συμβολοσειρές υποστηρίζουν έναν μεγάλο αριθμό μεθόδων για βασικούς "
"μετασχηματισμούς και αναζήτηση."

#: tutorial/introduction.rst:374
msgid ":ref:`f-strings`"
msgstr ":ref:`f-strings`"

#: tutorial/introduction.rst:374
msgid "String literals that have embedded expressions."
msgstr "Κυριολεκτικές συμβολοσειρές που έχουν ενσωματωμένες εκφράσεις."

#: tutorial/introduction.rst:377
msgid ":ref:`formatstrings`"
msgstr ":ref:`formatstrings`"

#: tutorial/introduction.rst:377
msgid "Information about string formatting with :meth:`str.format`."
msgstr ""
"Πληροφορίες σχετικά με τη μορφοποίηση συμβολοσειρών με τη μέθοδο :meth:`str."
"format`."

#: tutorial/introduction.rst:380
msgid ":ref:`old-string-formatting`"
msgstr ":ref:`old-string-formatting`"

#: tutorial/introduction.rst:380
msgid ""
"The old formatting operations invoked when strings are the left operand of "
"the ``%`` operator are described in more detail here."
msgstr ""
"Οι παλιές λειτουργίες μορφοποίησης που καλούνται όταν οι συμβολοσειρές είναι "
"ο αριστερός τελεστέος του τελεστή ``%`` περιγράφονται λεπτομερέστερα εδώ."

#: tutorial/introduction.rst:387
msgid "Lists"
msgstr "Λίστες"

#: tutorial/introduction.rst:389
msgid ""
"Python knows a number of *compound* data types, used to group together other "
"values.  The most versatile is the *list*, which can be written as a list of "
"comma-separated values (items) between square brackets.  Lists might contain "
"items of different types, but usually the items all have the same type. ::"
msgstr ""
"Η Python γνωρίζει έναν αριθμό *σύνθετων* τύπων δεδομένων, που "
"χρησιμοποιούνται για την ομαδοποίηση άλλων τιμών.  Ο πιο ευέλικτος είναι ο "
"τύπος *λίστα*, ο οποίος μπορεί να γραφτεί ως μια λίστα διαχωρισμένων με "
"κόμμα τιμών (στοιχείων) ανάμεσα σε τετράγωνες αγκύλες.  Οι λίστες μπορεί να "
"περιέχουν στοιχεία διαφορετικών τύπων, αλλά συνήθως όλα τα στοιχεία έχουν "
"τον ίδιο τύπο. ::"

#: tutorial/introduction.rst:398
msgid ""
"Like strings (and all other built-in :term:`sequence` types), lists can be "
"indexed and sliced::"
msgstr ""
"Όπως οι συμβολοσειρές (και όλοι οι άλλοι ενσωματωμένοι τύποι :term:"
"`sequence`), οι λίστες μπορούν να δεικτοδοτηθούν και να τεμαχιστούν::"

#: tutorial/introduction.rst:408
msgid "Lists also support operations like concatenation::"
msgstr "Οι λίστες υποστηρίζουν επίσης λειτουργίες όπως σύνδεση::"

#: tutorial/introduction.rst:413
msgid ""
"Unlike strings, which are :term:`immutable`, lists are a :term:`mutable` "
"type, i.e. it is possible to change their content::"
msgstr ""
"Σε αντίθεση με τις συμβολοσειρές, οι οποίες είναι :term:`immutable`, οι "
"λίστες είναι :term:`mutable` τύπος, δηλαδή είναι δυνατόν να αλλάξετε το "
"περιεχόμενό τους::"

#: tutorial/introduction.rst:423
msgid ""
"You can also add new items at the end of the list, by using the :meth:`!list."
"append` *method* (we will see more about methods later)::"
msgstr ""
"Μπορείτε επίσης να προσθέσετε νέα στοιχεία στο τέλος της λίστας, "
"χρησιμοποιώντας την *μέθοδο* :meth:`!list.append` (θα δούμε περισσότερα για "
"τις μεθόδους αργότερα)::"

#: tutorial/introduction.rst:431
msgid ""
"Simple assignment in Python never copies data. When you assign a list to a "
"variable, the variable refers to the *existing list*. Any changes you make "
"to the list through one variable will be seen through all other variables "
"that refer to it.::"
msgstr ""
"Η απλή ανάθεση στην Python δεν αντιγράφει ποτέ δεδομένα. Όταν αναθέτετε μια "
"λίστα σε μια μεταβλητή, η μεταβλητή αναφέρεται στην *υπάρχουσα λίστα*. "
"Οποιεσδήποτε αλλαγές κάνετε στη λίστα μέσω μιας μεταβλητής θα γίνουν "
"αντιληπτές από όλες τις άλλες μεταβλητές που αναφέρονται σε αυτήν::"

#: tutorial/introduction.rst:444
msgid ""
"All slice operations return a new list containing the requested elements.  "
"This means that the following slice returns a :ref:`shallow copy "
"<shallow_vs_deep_copy>` of the list::"
msgstr ""
"Όλοι οι τεμαχισμοί επιστρέφουν μια νέα λίστα που περιέχει τα ζητούμενα "
"στοιχεία.  Αυτό σημαίνει ότι ο ακόλουθος τεμαχισμός επιστρέφει ένα :ref:"
"`shallow copy <shallow_vs_deep_copy>` (ρηχό αντίγραφο) της λίστας::"

#: tutorial/introduction.rst:455
msgid ""
"Assignment to slices is also possible, and this can even change the size of "
"the list or clear it entirely::"
msgstr ""
"Η ανάθεση σε τεμαχισμούς είναι επίσης δυνατή, και αυτό μπορεί ακόμη και να "
"αλλάξει το μέγεθος της λίστας ή να τη διαγράψει εντελώς::"

#: tutorial/introduction.rst:474
msgid "The built-in function :func:`len` also applies to lists::"
msgstr "Η ενσωματωμένη συνάρτηση :func:`len` εφαρμόζεται επίσης στις λίστες::"

#: tutorial/introduction.rst:480
msgid ""
"It is possible to nest lists (create lists containing other lists), for "
"example::"
msgstr ""
"Είναι δυνατό να εμφωλεύσετε λίστες (να δημιουργήσετε λίστες που περιέχουν "
"άλλες λίστες), για παράδειγμα::"

#: tutorial/introduction.rst:496
msgid "First Steps Towards Programming"
msgstr "Πρώτα Βήματα Προς Τον Προγραμματισμό"

#: tutorial/introduction.rst:498
msgid ""
"Of course, we can use Python for more complicated tasks than adding two and "
"two together.  For instance, we can write an initial sub-sequence of the "
"`Fibonacci series <https://en.wikipedia.org/wiki/Fibonacci_sequence>`_ as "
"follows::"
msgstr ""
"Φυσικά, μπορούμε να χρησιμοποιήσουμε την Python για πιο περίπλοκες εργασίες "
"από την πρόσθεση δύο και δύο μαζί.  Για παράδειγμα, μπορούμε να γράψουμε μια "
"αρχική υπο-σειρά της `Σειράς Fibonacci <https://en.wikipedia.org/wiki/"
"Fibonacci_sequence>`_ ως ακολουθεί::"

#: tutorial/introduction.rst:518
msgid "This example introduces several new features."
msgstr "Αυτό το παράδειγμα εισάγει διάφορα νέα χαρακτηριστικά."

#: tutorial/introduction.rst:520
msgid ""
"The first line contains a *multiple assignment*: the variables ``a`` and "
"``b`` simultaneously get the new values 0 and 1.  On the last line this is "
"used again, demonstrating that the expressions on the right-hand side are "
"all evaluated first before any of the assignments take place.  The right-"
"hand side expressions are evaluated  from the left to the right."
msgstr ""
"Η πρώτη γραμμή περιέχει μια *πολλαπλή ανάθεση*: οι μεταβλητές ``a`` και "
"``b`` παίρνουν ταυτόχρονα τις νέες τιμές 0 και 1. Στην τελευταία γραμμή αυτό "
"χρησιμοποιείται ξανά, αποδεικνύοντας ότι οι εκφράσεις στη δεξιά πλευρά "
"αξιολογούνται όλες πρώτα πριν γίνει οποιαδήποτε ανάθεση.  Οι εκφράσεις στην "
"δεξιά πλευρά αξιολογούνται  από αριστερά προς τα δεξιά."

#: tutorial/introduction.rst:526
msgid ""
"The :keyword:`while` loop executes as long as the condition (here: ``a < "
"10``) remains true.  In Python, like in C, any non-zero integer value is "
"true; zero is false.  The condition may also be a string or list value, in "
"fact any sequence; anything with a non-zero length is true, empty sequences "
"are false.  The test used in the example is a simple comparison.  The "
"standard comparison operators are written the same as in C: ``<`` (less "
"than), ``>`` (greater than), ``==`` (equal to), ``<=`` (less than or equal "
"to), ``>=`` (greater than or equal to) and ``!=`` (not equal to)."
msgstr ""
"Ο βρόχος :keyword:`while` εκτελείται όσο η συνθήκη (εδώ: ``a < 10``) "
"παραμένει αληθής.  Στην Python, όπως και στη C, οποιαδήποτε μη μηδενική "
"ακέραια τιμή είναι αληθής, το μηδέν είναι ψευδές.  Η συνθήκη μπορεί επίσης "
"να είναι μια συμβολοσειρά ή μια λίστα, στην πραγματικότητα οποιαδήποτε "
"ακολουθία∙ οτιδήποτε με μη μηδενικό μήκος είναι αληθές, κενές ακολουθίες "
"είναι ψευδείς.  Το τεστ που χρησιμοποιείται στο παράδειγμα είναι μια απλή "
"σύγκριση.  Οι τυπικοί τελεστές σύγκρισης γράφονται όπως στη C: ``<`` "
"(μικρότερο από), ``>`` (μεγαλύτερο από), ``==`` (ίσο με), ``<=`` (μικρότερο "
"ή ίσο με), ``>=`` (μεγαλύτερο ή ίσο με) και ``!=`` (μη ίσο με)."

#: tutorial/introduction.rst:535
msgid ""
"The *body* of the loop is *indented*: indentation is Python's way of "
"grouping statements.  At the interactive prompt, you have to type a tab or "
"space(s) for each indented line.  In practice you will prepare more "
"complicated input for Python with a text editor; all decent text editors "
"have an auto-indent facility.  When a compound statement is entered "
"interactively, it must be followed by a blank line to indicate completion "
"(since the parser cannot guess when you have typed the last line).  Note "
"that each line within a basic block must be indented by the same amount."
msgstr ""
"Στο *σώμα* του βρόχου υπάρχει *εσοχή*: η εσοχή είναι ο τρόπος της Python να "
"ομαδοποιεί εντολές.  Στο διαδραστικό prompt, πρέπει να πληκτρολογήσετε ένα "
"tab ή κενό(α) για κάθε γραμμή με εσοχή.  Στην πράξη θα προετοιμάσετε πιο "
"περίπλοκες εισαγωγές για την Python με έναν επεξεργαστή κειμένου∙ όλοι οι "
"αξιοπρεπείς επεξεργαστές κειμένου διαθέτουν την δυνατότητα αυτόματης "
"εσοχής.  Όταν εισάγεται μια σύνθετη εντολή διαδραστικά, πρέπει να "
"ακολουθείται από μια κενή γραμμή για να υποδηλώνει την ολοκλήρωση (αφού ο "
"συντακτικός αναλυτής δεν μπορεί να μαντέψει πότε πληκτρολογήσατε την "
"τελευταία γραμμή).  Σημείωση ότι κάθε γραμμή μέσα σε ένα βασικό μπλοκ πρέπει "
"να έχει την ίδια εσοχή."

#: tutorial/introduction.rst:544
msgid ""
"The :func:`print` function writes the value of the argument(s) it is given. "
"It differs from just writing the expression you want to write (as we did "
"earlier in the calculator examples) in the way it handles multiple "
"arguments, floating point quantities, and strings.  Strings are printed "
"without quotes, and a space is inserted between items, so you can format "
"things nicely, like this::"
msgstr ""
"Η συνάρτηση :func:`print` γράφει την τιμή του(των) ορίσματος(ων) που της "
"δίνεται. Διαφέρει από το να γράφετε απλώς την έκφραση που θέλετε να γράψετε "
"(όπως κάναμε νωρίτερα στα παραδείγματα της αριθμομηχανής) στον τρόπο με τον "
"οποίο χειρίζεται πολλαπλά ορίσματα, αριθμούς με δεκαδικά ψηφία και "
"συμβολοσειρές.  Οι συμβολοσειρές εκτυπώνονται χωρίς εισαγωγικά, και ένα κενό "
"παρεμβάλλεται μεταξύ των στοιχείων, ώστε να μπορείτε να μορφοποιήσετε τα "
"πράγματα όμορφα, όπως εδώ::"

#: tutorial/introduction.rst:555
msgid ""
"The keyword argument *end* can be used to avoid the newline after the "
"output, or end the output with a different string::"
msgstr ""
"Το όρισμα-κλειδί *end* μπορεί να χρησιμοποιηθεί για την αποφυγή της νέας "
"γραμμής μετά την έξοδο, ή για να τελειώσετε την έξοδο με μια διαφορετική "
"συμβολοσειρά::"

#: tutorial/introduction.rst:567
msgid "Footnotes"
msgstr "Υποσημειώσεις"

#: tutorial/introduction.rst:568
msgid ""
"Since ``**`` has higher precedence than ``-``, ``-3**2`` will be interpreted "
"as ``-(3**2)`` and thus result in ``-9``.  To avoid this and get ``9``, you "
"can use ``(-3)**2``."
msgstr ""
"Δεδομένου ότι το ``**`` έχει μεγαλύτερη προτεραιότητα από το ``-``, το "
"``-3**2`` θα ερμηνευτεί ως ``-(3**2)`` και έτσι θα προκύψει ``-9``.  Για να "
"το αποφύγετε αυτό και να πάρετε ``9``, μπορείτε να χρησιμοποιήσετε "
"``(-3)**2``."

#: tutorial/introduction.rst:572
msgid ""
"Unlike other languages, special characters such as ``\\n`` have the same "
"meaning with both single (``'...'``) and double (``\"...\"``) quotes. The "
"only difference between the two is that within single quotes you don't need "
"to escape ``\"`` (but you have to escape ``\\'``) and vice versa."
msgstr ""
"Σε αντίθεση με άλλες γλώσσες, οι ειδικοί χαρακτήρες όπως το ``\\n`` έχουν "
"την ίδια σημασία τόσο με απλά (``'...'``) όσο και με διπλά (``\"...\"``) "
"εισαγωγικά. Η μόνη διαφορά μεταξύ των δύο είναι ότι μέσα σε απλά εισαγωγικά "
"δεν χρειάζεται να αποφύγετε το ``\"`` (αλλά πρέπει να αποφύγετε το ``\\'``) "
"και το αντίστροφο."

#: tutorial/introduction.rst:21
msgid "# (hash)"
msgstr "# (hash)"

#: tutorial/introduction.rst:21
msgid "comment"
msgstr "σχόλιο"
